
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'accumulative_tok equality identifier if insert lb_tok normal_tok parallel_tok rb_tok running_total_tok semicolon series_tok skip then this_tok uniform_tok valuerules : rules rule semicolon\n                 | emptyrule : if identifier expr then action\n                | if rt_expr then actionexpr : this_tok identifier equality value\n                | accumulative_tok identifier equality valuert_expr : running_total_tok identifier equality valueaction : skip identifier\n                  | insert identifier lb_tok attributes rb_tok\n                  | insert identifier\n                  | parallel_list\n                  | series_listattributes : attributes this_tok identifier value\n                      | attributes this_tok identifier distribution\n                      | this_tok identifier value\n                      | this_tok identifier distributiondistribution : normal_tok lb_tok value value rb_tok\n                         | uniform_tok lb_tok value value value rb_tokparallel_list : parallel_item\n                         | parallel_item parallel_nextparallel_item : identifier parallel_tok identifierparallel_next : parallel_tok identifier\n                         | parallel_next parallel_tok identifierseries_list : series_item\n                       | series_item series_nextseries_item : identifier series_tok identifierseries_next : series_tok identifier\n                       | series_next series_tok identifierempty :'
    
_lr_action_items = {'if':([0,1,2,5,],[-29,4,-2,-1,]),'$end':([0,1,2,5,],[-29,0,-2,-1,]),'semicolon':([3,17,21,22,23,24,26,29,32,33,35,40,41,44,46,49,50,51,],[5,-4,-11,-12,-19,-24,-3,-8,-10,-20,-25,-21,-26,-22,-27,-23,-28,-9,]),'identifier':([4,8,10,11,12,14,18,20,30,31,34,36,43,45,48,52,],[6,13,15,16,19,19,29,32,40,41,44,46,49,50,53,54,]),'running_total_tok':([4,],[8,]),'this_tok':([6,42,47,55,56,59,60,67,69,],[10,48,52,-15,-16,-13,-14,-17,-18,]),'accumulative_tok':([6,],[11,]),'then':([7,9,37,38,39,],[12,14,-7,-5,-6,]),'skip':([12,14,],[18,18,]),'insert':([12,14,],[20,20,]),'equality':([13,15,16,],[25,27,28,]),'parallel_tok':([19,23,33,40,44,49,],[30,34,43,-21,-22,-23,]),'series_tok':([19,24,35,41,46,50,],[31,36,45,-26,-27,-28,]),'value':([25,27,28,53,54,61,62,63,64,66,],[37,38,39,55,59,63,64,65,66,68,]),'lb_tok':([32,57,58,],[42,61,62,]),'rb_tok':([47,55,56,59,60,65,67,68,69,],[51,-15,-16,-13,-14,67,-17,69,-18,]),'normal_tok':([53,54,],[57,57,]),'uniform_tok':([53,54,],[58,58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rules':([0,],[1,]),'empty':([0,],[2,]),'rule':([1,],[3,]),'rt_expr':([4,],[7,]),'expr':([6,],[9,]),'action':([12,14,],[17,26,]),'parallel_list':([12,14,],[21,21,]),'series_list':([12,14,],[22,22,]),'parallel_item':([12,14,],[23,23,]),'series_item':([12,14,],[24,24,]),'parallel_next':([23,],[33,]),'series_next':([24,],[35,]),'attributes':([42,],[47,]),'distribution':([53,54,],[56,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> rules","S'",1,None,None,None),
  ('rules -> rules rule semicolon','rules',3,'p_rules','rule_parser.py',34),
  ('rules -> empty','rules',1,'p_rules','rule_parser.py',35),
  ('rule -> if identifier expr then action','rule',5,'p_rule','rule_parser.py',39),
  ('rule -> if rt_expr then action','rule',4,'p_rule','rule_parser.py',40),
  ('expr -> this_tok identifier equality value','expr',4,'p_expr','rule_parser.py',63),
  ('expr -> accumulative_tok identifier equality value','expr',4,'p_expr','rule_parser.py',64),
  ('rt_expr -> running_total_tok identifier equality value','rt_expr',4,'p_rt_expr','rule_parser.py',75),
  ('action -> skip identifier','action',2,'p_action','rule_parser.py',83),
  ('action -> insert identifier lb_tok attributes rb_tok','action',5,'p_action','rule_parser.py',84),
  ('action -> insert identifier','action',2,'p_action','rule_parser.py',85),
  ('action -> parallel_list','action',1,'p_action','rule_parser.py',86),
  ('action -> series_list','action',1,'p_action','rule_parser.py',87),
  ('attributes -> attributes this_tok identifier value','attributes',4,'p_attributes','rule_parser.py',98),
  ('attributes -> attributes this_tok identifier distribution','attributes',4,'p_attributes','rule_parser.py',99),
  ('attributes -> this_tok identifier value','attributes',3,'p_attributes','rule_parser.py',100),
  ('attributes -> this_tok identifier distribution','attributes',3,'p_attributes','rule_parser.py',101),
  ('distribution -> normal_tok lb_tok value value rb_tok','distribution',5,'p_distribution','rule_parser.py',119),
  ('distribution -> uniform_tok lb_tok value value value rb_tok','distribution',6,'p_distribution','rule_parser.py',120),
  ('parallel_list -> parallel_item','parallel_list',1,'p_parallel_list','rule_parser.py',131),
  ('parallel_list -> parallel_item parallel_next','parallel_list',2,'p_parallel_list','rule_parser.py',132),
  ('parallel_item -> identifier parallel_tok identifier','parallel_item',3,'p_parallel_item','rule_parser.py',136),
  ('parallel_next -> parallel_tok identifier','parallel_next',2,'p_parallel_next','rule_parser.py',142),
  ('parallel_next -> parallel_next parallel_tok identifier','parallel_next',3,'p_parallel_next','rule_parser.py',143),
  ('series_list -> series_item','series_list',1,'p_series_list','rule_parser.py',152),
  ('series_list -> series_item series_next','series_list',2,'p_series_list','rule_parser.py',153),
  ('series_item -> identifier series_tok identifier','series_item',3,'p_series_item','rule_parser.py',157),
  ('series_next -> series_tok identifier','series_next',2,'p_series_next','rule_parser.py',163),
  ('series_next -> series_next series_tok identifier','series_next',3,'p_series_next','rule_parser.py',164),
  ('empty -> <empty>','empty',0,'p_empty','rule_parser.py',173),
]
